# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-23 13:37
from __future__ import unicode_literals

import LMS.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('evaluated', models.BooleanField(default=False)),
                ('correct', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('partial', 'partial')], default='no', max_length=10)),
                ('marksObtained', models.PositiveIntegerField(default=0)),
                ('attachment', models.FileField(null=True, upload_to=LMS.models.getAnswerAttachmentPath)),
                ('txt', models.TextField(max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=20000)),
                ('dp', models.ImageField(null=True, upload_to=LMS.models.getChannelDPPath)),
                ('version', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lmsChannels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('txt', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('enrollmentStatus', models.CharField(choices=[('open', 'open'), ('onInvitation', 'onInvitation'), ('admin', 'admin'), ('onRequest', 'onRequest'), ('closed', 'closed')], default='pdf', max_length=20)),
                ('description', models.TextField(max_length=2000)),
                ('dp', models.FileField(null=True, upload_to=LMS.models.getCourseDPAttachmentPath)),
                ('TAs', models.ManyToManyField(blank=True, related_name='lmsCourseAssisting', to=settings.AUTH_USER_MODEL)),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lmsCoursesInstructing', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('accepted', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('addedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lmsUsersAdded', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='LMS.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('comment', 'comment'), ('like', 'like')], max_length=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('comment', models.CharField(max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PaperQues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('marks', models.PositiveSmallIntegerField()),
                ('optional', models.BooleanField(default=False)),
                ('negativeMarks', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='QPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('text', 'text'), ('image', 'image')], default='text', max_length=10)),
                ('txt', models.CharField(max_length=2000, null=True)),
                ('image', models.FileField(null=True, upload_to=LMS.models.getQAttachmentPath)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('ques', models.CharField(max_length=5000)),
                ('status', models.CharField(choices=[('submitted', 'submitted'), ('reviewed', 'reviewed'), ('approved', 'approved')], default='submitted', max_length=20)),
                ('archived', models.BooleanField(default=False)),
                ('level', models.CharField(choices=[('easy', 'easy'), ('moderate', 'moderate'), ('difficult', 'difficult')], max_length=15, null=True)),
                ('marks', models.PositiveIntegerField(null=True)),
                ('qtype', models.CharField(choices=[('mcq', 'Single Correct Choice'), ('mcc', 'Multiple Correct Choices'), ('code', 'Code'), ('upload', 'Assignment Upload'), ('integer', 'Answer in Integer'), ('string', 'Answer in String'), ('float', 'Answer in Float')], default='mcq', max_length=10)),
                ('codeLang', models.CharField(choices=[('python', 'Python'), ('bash', 'Bash'), ('c', 'C Language'), ('cpp', 'C++ Language'), ('java', 'Java Language'), ('scilab', 'Scilab'), ('any', 'any')], default='any', max_length=10)),
                ('optionsParts', models.ManyToManyField(blank=True, related_name='questionsOptions', to='LMS.QPart')),
                ('quesParts', models.ManyToManyField(blank=True, related_name='questions', to='LMS.QPart')),
                ('solutionParts', models.ManyToManyField(blank=True, related_name='questionsSolutions', to='LMS.QPart')),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('typ', models.CharField(choices=[('file', 'file'), ('presentation', 'presentation'), ('video', 'video'), ('quiz', 'quiz'), ('notes', 'notes'), ('announcement', 'announcement')], default='pdf', max_length=20)),
                ('attachment', models.FileField(null=True, upload_to=LMS.models.getStudyMaterialAttachmentPath)),
                ('archived', models.BooleanField(default=False)),
                ('pinned', models.BooleanField(default=False)),
                ('data', models.CharField(max_length=100, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studyMaterials', to='LMS.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=30)),
                ('level', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(max_length=2000)),
                ('dp', models.FileField(null=True, upload_to=LMS.models.getCourseDPAttachmentPath)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=2000)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='LMS.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('views', models.PositiveIntegerField(default=0)),
                ('attachment', models.FileField(null=True, upload_to=LMS.models.getVideoPath)),
                ('thumbnail', models.ImageField(null=True, upload_to=LMS.models.getVideoThumbnailPath)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='LMS.Channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videoUploads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='LMS.Topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionsAuthored', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paperques',
            name='ques',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paperquestion', to='LMS.Question'),
        ),
        migrations.AddField(
            model_name='paperques',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paperQuesAuthored', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paper',
            name='questions',
            field=models.ManyToManyField(blank=True, to='LMS.PaperQues'),
        ),
        migrations.AddField(
            model_name='paper',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papersAuthored', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like',
            name='studyMaterial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='LMS.StudyMaterial'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lmsMaterialLikes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='video',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='LMS.Video'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='videoSeries',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='LMS.Channel'),
        ),
        migrations.AddField(
            model_name='course',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LMS.Topic'),
        ),
        migrations.AddField(
            model_name='course',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseCreated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='studyMaterial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='LMS.StudyMaterial'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lmsMaterialComments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answersSubmssions', to='LMS.Paper'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answersSubmssions', to='LMS.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answersSubmssions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='feedback',
            unique_together=set([('user', 'video', 'typ')]),
        ),
    ]
