# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-23 13:37
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import social.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('tagged', models.ManyToManyField(blank=True, related_name='taggedAlbums', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialAlbums', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.FileField(null=True, upload_to=social.models.getCommentAttachmentPath)),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('subscription', models.CharField(choices=[(b'all', b'all'), (b'daily', b'daily'), (b'weekly', b'weekly'), (b'monthly', b'monthly'), (b'available', b'available')], default=b'all', max_length=10)),
                ('enrollment', models.CharField(choices=[(b'tagged', b'tagged'), (b'starred', b'starred'), (b'action', b'action')], default=b'tagged', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to=social.models.getSocialPictureUploadPath)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='social.album')),
                ('tagged', models.ManyToManyField(blank=True, related_name='taggedPictures', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialPhotos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to=social.models.getPostAttachmentPath)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('tagged', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialPost', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='postHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to=social.models.getPostAttachmentPath)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='social.post')),
            ],
        ),
        migrations.CreateModel(
            name='social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aboutMe', models.TextField(max_length=1000, null=True)),
                ('status', models.CharField(max_length=100, null=True)),
                ('coverPic', models.ImageField(blank=True, null=True, upload_to=social.models.getSocialCoverPictureUploadPath)),
                ('followers', models.ManyToManyField(blank=True, related_name='peopleFollowing', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='albumFollower',
            fields=[
                ('follow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.follow')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='social.album')),
            ],
            bases=('social.follow',),
        ),
        migrations.CreateModel(
            name='commentLike',
            fields=[
                ('like_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.like')),
            ],
            bases=('social.like',),
        ),
        migrations.CreateModel(
            name='pictureComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.comment')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='social.picture')),
            ],
            bases=('social.comment',),
        ),
        migrations.CreateModel(
            name='pictureLike',
            fields=[
                ('like_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.like')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='social.picture')),
            ],
            bases=('social.like',),
        ),
        migrations.CreateModel(
            name='postComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.comment')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='social.post')),
            ],
            bases=('social.comment',),
        ),
        migrations.CreateModel(
            name='postFollower',
            fields=[
                ('follow_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.follow')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='social.post')),
            ],
            bases=('social.follow',),
        ),
        migrations.CreateModel(
            name='postLike',
            fields=[
                ('like_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='social.like')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='social.post')),
            ],
            bases=('social.like',),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialLikes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='follow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='tagged',
            field=models.ManyToManyField(blank=True, related_name='taggedComments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialComments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentlike',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='social.comment'),
        ),
    ]
